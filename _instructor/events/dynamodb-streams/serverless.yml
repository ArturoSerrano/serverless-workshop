
service: event-driven-app

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    MY_TABLE: { Ref: myDynamoTable }
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
        # WORKSHOP_START
        # The IAM role must be updated to include `DeleteItem`
        # WORKSHOP_END
        # FINAL_START
        # New DeleteItem permission for `delete` function
        - dynamodb:DeleteItem
        # FINAL_END
        # WORKSHOP_START
        # For Dynamo Stream access. You will need the `GetRecords`, `GetShardIterator`, `DescribeStream`, `ListStreams` permissions
        # WORKSHOP_END
        # FINAL_START
        # New permissions needed for stream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
        # FINAL_END
      Resource: { Fn::GetAtt: [ myDynamoTable, Arn ] }

functions:
  create:
    handler: handler.create
    events:
      - http:
          path: create
          method: post
          cors: true
  scan:
    handler: handler.scan
    events:
      - http:
          path: scan
          method: post
          cors: true
  # WORKSHOP_START
  # Add a `delete` function triggered by an http POST
  # WORKSHOP_END
  # FINAL_START
  # New delete function
  delete:
    handler: handler.delete
    events:
      - http:
          path: delete
          method: post
          cors: true
  # FINAL_END
  # WORKSHOP_START
  # Add a `handleStream` function triggered by a dynamo Stream http://bit.ly/2mhkJne
  # WORKSHOP_END
  # FINAL_START
  # New stream handler function
  handleStream:
    handler: handler.dynamoStreamHandler
    events:
      - stream:
          type: dynamodb
          arn: { Fn::GetAtt: [ myDynamoTable, StreamArn ] }
          batchSize: 1
  # FINAL_END

resources:
  Resources:
    myDynamoTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'my-table-name'
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        # WORKSHOP_START
        # add a stream to the dynamoDB table
        # WORKSHOP_END
        # FINAL_START
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        # FINAL_END
